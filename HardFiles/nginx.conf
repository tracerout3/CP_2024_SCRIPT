user  www www;

worker_processes  2;

pid /var/run/nginx.pid;

# Log format
error_log  /var/log/nginx.error_log  info;

events {
    worker_connections   1024;  # Adjust to a reasonable value for your server

    # Use the best available event system
    use epoll;  # Use epoll for better performance on Linux-based systems
}

http {

    include       conf/mime.types;
    default_type  application/octet-stream;

    # Enable strict security headers
    server_tokens off;  # Hide Nginx version
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;  # Referrer policy
    add_header X-Frame-Options "SAMEORIGIN" always;  # Prevent clickjacking
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; style-src 'self';" always;

    # Logging format
    log_format main      '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$gzip_ratio"';

    log_format download  '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"';

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;

    # Gzip settings - optimize for security and performance
    gzip on;
    gzip_min_length  1100;
    gzip_buffers     4 8k;
    gzip_types       text/plain text/css application/javascript application/x-javascript text/javascript application/json;

    # Resource management
    output_buffers   1 32k;
    postpone_output  1460;

    sendfile         on;
    tcp_nopush       on;
    tcp_nodelay      on;
    send_lowat       12000;

    keepalive_timeout  75 20;

    # Security: Disable certain dangerous HTTP methods
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 444;  # Return 444 (No Response) for forbidden methods
    }

    server {
        listen        80;
        server_name   one.example.com www.one.example.com;

        access_log   /var/log/nginx.access_log  main;

        location / {
            proxy_pass         http://127.0.0.1/;
            proxy_redirect     off;

            # Preserve the Host header
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            #proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            client_max_body_size       10m;
            client_body_buffer_size    128k;

            client_body_temp_path      /var/nginx/client_body_temp;

            # Proxy timeouts
            proxy_connect_timeout      70;
            proxy_send_timeout         90;
            proxy_read_timeout         90;
            proxy_send_lowat           12000;

            # Proxy buffer settings
            proxy_buffer_size          4k;
            proxy_buffers              4 32k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;

            proxy_temp_path            /var/nginx/proxy_temp;

            charset  utf-8;  # Set charset for better security
        }

        # Error page configuration
        error_page  404  /404.html;

        location = /404.html {
            root  /spool/www;
        }

        # Example of proper URL redirection (301)
        location /old_stuff/ {
            rewrite   ^/old_stuff/(.*)$  /new_stuff/$1  permanent;
        }

        # Secure download handling with referer validation
        location /download/ {

            valid_referers  none  blocked  server_names  *.example.com;

            if ($invalid_referer) {
                return   403;
            }

            #rewrite /download/*/mp3/*.any_ext to /download/*/mp3/*.mp3
            rewrite ^/(download/.*)/mp3/(.*)\..*$
                    /$1/mp3/$2.mp3                   break;

            root         /spool/www;
            access_log   /var/log/nginx-download.access_log  download;
        }

        # Caching and file handling for static files
        location ~* \.(jpg|jpeg|gif)$ {
            root         /spool/www;
            access_log   off;
            expires      30d;
        }

        # Deny access to sensitive files
        location ~* /(\.ht|\.git|\.svn) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Limit access to specific user-agents if needed
        # location /path_to_protect/ {
        #   if ($http_user_agent ~* "BadUserAgent") {
        #     return 403;
        #   }
        # }

    }

    # Other global configuration as needed
}
